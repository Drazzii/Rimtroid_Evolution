<?xml version="1.0" encoding="UTF-8"?>
<Defs>

<!--=============== Larvae Abilities ===============-->

  <!--Larvae drain attack may be turned into an ability.
  Larvae can still drain food through normal attacks,
  but this ability sends the larvae to a designated target.
  Larvae then attaches to the target and stuns them for a few seconds,
  Rapidly gaining age and food. This will take some serious coding.-->

<!--=============== Alpha Abilities ===============-->

      <AbilityDef>
      <defName>RT_AlphaBomb</defName>
      <label>Electric Bomb</label>
      <description>Drops a proximity bomb that will detonate on hostiles</description>
      <abilityClass>RT_Rimtroid.Ability_MetroidBomb</abilityClass>
      <targetRequired>false</targetRequired>
      <canUseAoeToGetTargets>true</canUseAoeToGetTargets>
      <cooldownTicksRange>2000</cooldownTicksRange>
      <displayGizmoWhileUndrafted>true</displayGizmoWhileUndrafted>
      <disableGizmoWhileUndrafted>false</disableGizmoWhileUndrafted>
      <iconPath>Things/Misc/MetroidBomb</iconPath>
      <verbProperties>
        <verbClass>RT_Core.Verb_CastAbility_Base</verbClass>
        <soundCast>RT_ShockwaveSound</soundCast>
        <warmupTime>1</warmupTime>
      </verbProperties>
      <comps>
        <li Class="RT_Core.AbilityCompProperties_AbilityControl">
          <compClass>RT_Core.AbilityComp_AbilityControl</compClass>
          <autoUse>true</autoUse>
          <gizmoOnText>Bombs Enabled</gizmoOnText>
          <gizmoOffText>Bombs Disabled</gizmoOffText>
          <gizmoOnIconPath>Things/Misc/MetroidBomb</gizmoOnIconPath>
          <gizmoOffIconPath>Things/Misc/MetroidBomb</gizmoOffIconPath>
          <gizmoDesc>Toggle Bomb Usage</gizmoDesc>
        </li>
			  <li Class="RT_Core.AbilityCompProperties_Cooldown">
          <compClass>RT_Core.AbilityComp_Cooldown</compClass>
				  <cooldownPool>AlphaAbilityPool</cooldownPool>
          <cooldownTicksRange>200</cooldownTicksRange>
				  <independent>false</independent>
				  <resetsTimer>false</resetsTimer>
			  </li>
      </comps>
    </AbilityDef>

    <!--Alpha has an evolved variant that drops bombs that electiry the floor.
    Additionally, alphas that ignite the floor with fire exist as well.
    The fire ignition does drastically more damage.
    Ones that drop fire do not drop normal electric bombs.
    Will be added later, once I add the heavy genetic manipulation stuff.-->

<!--=============== Gamma Abilities ===============-->

    <!--Gamma Electric Bolt; change to beam later -->
     <AbilityDef>
      <defName>RT_GammaElectricBolt</defName>
      <label>Electric Bolt</label>
      <description>Fire an arc of electricity at a target</description>
      <abilityClass>RT_Core.Ability_Base</abilityClass>
      <canUseAoeToGetTargets>true</canUseAoeToGetTargets>
      <cooldownTicksRange>1000~1200</cooldownTicksRange>
      <displayGizmoWhileUndrafted>true</displayGizmoWhileUndrafted>
      <disableGizmoWhileUndrafted>false</disableGizmoWhileUndrafted>
      <iconPath>AnimalProjectile/GammaBolt</iconPath>
      <verbProperties>
<!-- Make sure range and minRange matches the CastVerb's range and minRanges -->
        <verbClass>RT_Core.Verb_CastAbility_Base</verbClass>
        <range>35</range>
        <minRange>1</minRange>
<!-- Projectile defined here just for the targeting when you click the gizmo, the CastVerb's projectile is the actual one that will cause damage -->
			  <defaultProjectile>RT_GammaBolt</defaultProjectile>
<!-- Controls how likely the ability will get picked. -->
			  <commonality>2</commonality>
      </verbProperties>
      <comps>
        <li Class="RT_Core.AbilityCompProperties_AbilityControl">
          <compClass>RT_Core.AbilityComp_AbilityControl</compClass>
<!-- Allows the ability.verb to be picked up by Pawn.TryGetAttackVerb -->
          <autoUse>true</autoUse>
          <gizmoOnText>Electric Bolt Enabled</gizmoOnText>
          <gizmoOffText>Electric Bolt Disabled</gizmoOffText>
          <gizmoOnIconPath>AnimalProjectile/GammaBolt</gizmoOnIconPath>
          <gizmoOffIconPath>AnimalProjectile/GammaBolt</gizmoOffIconPath>
          <gizmoDesc>Toggle Electric Bolt Usage</gizmoDesc>
        </li>
        <li Class="RT_Core.AbilityCompProperties_CastVerb">
          <compClass>RT_Core.AbilityComp_CastVerb</compClass>
<!-- Verbs defined here will be actually triggered when the ability activates. -->
          <verbProperties>
            <li>
              <verbClass>Verb_Shoot</verbClass>
              <accuracyTouch>0.95</accuracyTouch>
              <accuracyShort>0.60</accuracyShort>
              <accuracyMedium>0.50</accuracyMedium>
              <accuracyLong>0.30</accuracyLong>
              <hasStandardCommand>true</hasStandardCommand>
              <defaultProjectile>RT_GammaBolt</defaultProjectile>
              <warmupTime>0.5</warmupTime>
              <range>35</range>
              <minRange>1</minRange>
              <burstShotCount>1</burstShotCount>
              <ticksBetweenBurstShots>2</ticksBetweenBurstShots>
              <soundCast>RT_ElectricBoltSound</soundCast>
               <muzzleFlashScale>1</muzzleFlashScale>
            </li>
          </verbProperties>
        </li>
			  <li Class="RT_Core.AbilityCompProperties_Cooldown">
          <compClass>RT_Core.AbilityComp_Cooldown</compClass>
<!-- Ability cooldown pool -->
				  <cooldownPool>GammaAbilityPool</cooldownPool>
<!-- Cooldown ticks range (omit to use each verb's default <cooldownTicksRange>) -->
				  <!--<cooldownTicksRange>1200</cooldownTicksRange>-->
<!-- Unaffected by other abilities cooling down in the same pool -->
				  <independent>true</independent>
<!-- Resets the other cooldowns in the pool even if they're already cooling down -->
				  <resetsTimer>false</resetsTimer>
			  </li>
      </comps>
    </AbilityDef>

    <AbilityDef>
      <defName>RT_GammaShockwave</defName>
      <label>Shockwave</label>
      <description>Generates an electric pulse that damages anything nearby</description>
      <abilityClass>RT_Rimtroid.Ability_Shockwave</abilityClass>
      <targetRequired>false</targetRequired>
      <canUseAoeToGetTargets>true</canUseAoeToGetTargets>
      <cooldownTicksRange>1200~1400</cooldownTicksRange>
      <displayGizmoWhileUndrafted>true</displayGizmoWhileUndrafted>
      <disableGizmoWhileUndrafted>false</disableGizmoWhileUndrafted>
      <iconPath>UI/Abilities/Shockwave</iconPath>
      <verbProperties>
        <verbClass>RT_Core.Verb_CastAbility_Base</verbClass>
        <warmupTime>1</warmupTime>
        <range>5</range>
        <meleeDamageDef>Burn</meleeDamageDef>
        <soundCast>RT_ShockwaveSound</soundCast>
      </verbProperties>
      <comps>
        <li Class="RT_Core.AbilityCompProperties_AbilityControl">
          <compClass>RT_Core.AbilityComp_AbilityControl</compClass>
          <autoUse>true</autoUse>
          <gizmoOnText>Shockwave Enabled</gizmoOnText>
          <gizmoOffText>Shockwave Disabled</gizmoOffText>
          <gizmoOnIconPath>UI/Abilities/Shockwave</gizmoOnIconPath>
          <gizmoOffIconPath>UI/Abilities/Shockwave</gizmoOffIconPath>
          <gizmoDesc>Toggle Shockwave Usage</gizmoDesc>
        </li>
			  <li Class="RT_Core.AbilityCompProperties_Cooldown">
          <compClass>RT_Core.AbilityComp_Cooldown</compClass>
				  <cooldownPool>GammaAbilityPool</cooldownPool>
          <cooldownTicksRange>200</cooldownTicksRange>
				  <independent>false</independent>
				  <resetsTimer>false</resetsTimer>
			  </li>
      </comps>
    </AbilityDef>

      <AbilityDef>
      <defName>RT_GammaBomb</defName>
      <label>Electric Bomb</label>
      <description>Drops a proximity bomb that will detonate on hostiles</description>
      <abilityClass>RT_Rimtroid.Ability_MetroidBomb</abilityClass>
      <targetRequired>false</targetRequired>
      <canUseAoeToGetTargets>true</canUseAoeToGetTargets>
      <cooldownTicksRange>2000</cooldownTicksRange>
      <displayGizmoWhileUndrafted>true</displayGizmoWhileUndrafted>
      <disableGizmoWhileUndrafted>false</disableGizmoWhileUndrafted>
      <iconPath>Things/Misc/MetroidBomb</iconPath>
      <verbProperties>
        <verbClass>RT_Core.Verb_CastAbility_Base</verbClass>
        <soundCast>RT_ShockwaveSound</soundCast>
        <warmupTime>1</warmupTime>
      </verbProperties>
      <comps>
        <li Class="RT_Core.AbilityCompProperties_AbilityControl">
          <compClass>RT_Core.AbilityComp_AbilityControl</compClass>
          <autoUse>true</autoUse>
          <gizmoOnText>Bombs Enabled</gizmoOnText>
          <gizmoOffText>Bombs Disabled</gizmoOffText>
          <gizmoOnIconPath>Things/Misc/MetroidBomb</gizmoOnIconPath>
          <gizmoOffIconPath>Things/Misc/MetroidBomb</gizmoOffIconPath>
          <gizmoDesc>Toggle Bomb Usage</gizmoDesc>
        </li>
			  <li Class="RT_Core.AbilityCompProperties_Cooldown">
          <compClass>RT_Core.AbilityComp_Cooldown</compClass>
				  <cooldownPool>GammaAbilityPool</cooldownPool>
          <cooldownTicksRange>200</cooldownTicksRange>
				  <independent>false</independent>
				  <resetsTimer>false</resetsTimer>
			  </li>
      </comps>
    </AbilityDef>

      <AbilityDef>
      <defName>RT_GammaBurst</defName>
      <label>Electric Burst</label>
      <description>Creates a burst of electricity that damages and stuns anything on top</description>
      <abilityClass>RT_Rimtroid.Ability_GammaIgnite</abilityClass>
      <targetRequired>false</targetRequired>
      <canUseAoeToGetTargets>true</canUseAoeToGetTargets>
      <cooldownTicksRange>2000</cooldownTicksRange>
      <displayGizmoWhileUndrafted>true</displayGizmoWhileUndrafted>
      <disableGizmoWhileUndrafted>false</disableGizmoWhileUndrafted>
      <iconPath>UI/Abilities/ElectricBurst</iconPath>
      <verbProperties>
        <verbClass>RT_Core.Verb_CastAbility_Base</verbClass>
        <soundCast>RT_ShockwaveSound</soundCast>
        <warmupTime>2</warmupTime>
        <range>4</range>
      </verbProperties>
      <comps>
        <li Class="RT_Core.AbilityCompProperties_AbilityControl">
          <compClass>RT_Core.AbilityComp_AbilityControl</compClass>
          <autoUse>true</autoUse>
          <gizmoOnText>Electric Burst Enabled</gizmoOnText>
          <gizmoOffText>Electric Burst Disabled</gizmoOffText>
          <gizmoOnIconPath>Things/Misc/MetroidBomb</gizmoOnIconPath>
          <gizmoOffIconPath>Things/Misc/MetroidBomb</gizmoOffIconPath>
          <gizmoDesc>Toggle Burst Usage</gizmoDesc>
        </li>
			  <li Class="RT_Core.AbilityCompProperties_Cooldown">
          <compClass>RT_Core.AbilityComp_Cooldown</compClass>
				  <cooldownPool>GammaAbilityPool</cooldownPool>
          <cooldownTicksRange>200</cooldownTicksRange>
				  <independent>false</independent>
				  <resetsTimer>false</resetsTimer>
			  </li>
      </comps>
    </AbilityDef>

    <!--Gamma Metroids also have electric beam breath, which needs to be added.
    Mutated ones can also drop the same massive fireball that mutated Alphas have.
    Mutated ones don't have regular bombs, but do have all other abilities-->

<!--=============== Zeta Abilities ===============-->

      <AbilityDef>
        <defName>RT_ZetaFireball</defName>
        <label>Fireball</label>
        <description>Lob balls of fire at a target</description>
        <abilityClass>RT_Core.Ability_Base</abilityClass>
        <canUseAoeToGetTargets>true</canUseAoeToGetTargets>
        <cooldownTicksRange>1000~1200</cooldownTicksRange>
        <displayGizmoWhileUndrafted>true</displayGizmoWhileUndrafted>
        <disableGizmoWhileUndrafted>false</disableGizmoWhileUndrafted>
        <iconPath>AnimalProjectile/Firebolt</iconPath>
        <verbProperties>
            <verbClass>RT_Core.Verb_CastAbility_Base</verbClass>
            <range>28</range>
            <minRange>1</minRange>
			    <defaultProjectile>RT_ZetaFireball</defaultProjectile>
			    <commonality>2</commonality>
        </verbProperties>
        <comps>
            <li Class="RT_Core.AbilityCompProperties_AbilityControl">
              <compClass>RT_Core.AbilityComp_AbilityControl</compClass>
              <autoUse>true</autoUse>
              <gizmoOnText>Firebolt Enabled</gizmoOnText>
              <gizmoOffText>Firebolt Disabled</gizmoOffText>
              <gizmoOnIconPath>AnimalProjectile/Firebolt</gizmoOnIconPath>
              <gizmoOffIconPath>AnimalProjectile/Firebolt</gizmoOffIconPath>
              <gizmoDesc>Toggle Firebolt Usage</gizmoDesc>
            </li>
            <li Class="RT_Core.AbilityCompProperties_CastVerb">
              <compClass>RT_Core.AbilityComp_CastVerb</compClass>
              <verbProperties>
                <li>
                  <verbClass>Verb_Shoot</verbClass>
                  <accuracyTouch>0.95</accuracyTouch>
                  <accuracyShort>0.60</accuracyShort>
                  <accuracyMedium>0.50</accuracyMedium>
                  <accuracyLong>0.30</accuracyLong>
                  <hasStandardCommand>true</hasStandardCommand>
                  <defaultProjectile>RT_ZetaFireball</defaultProjectile>
                  <warmupTime>0.5</warmupTime>
                  <range>28</range>
                  <minRange>1</minRange>
                  <burstShotCount>3</burstShotCount>
                  <ticksBetweenBurstShots>10</ticksBetweenBurstShots>
                  <soundCast>RT_FireboltSound</soundCast>
                  <muzzleFlashScale>1</muzzleFlashScale>
                </li>
              </verbProperties>
            </li>
			      <li Class="RT_Core.AbilityCompProperties_Cooldown">
              <compClass>RT_Core.AbilityComp_Cooldown</compClass>
				      <cooldownPool>ZetaAbilityPool</cooldownPool>
              <cooldownTicksRange>300</cooldownTicksRange>
				      <independent>false</independent>
				      <resetsTimer>false</resetsTimer>
			      </li>
          </comps>
      </AbilityDef>

      <AbilityDef>
        <defName>RT_ZetaAcidSpit</defName>
        <label>Acid Spit</label>
        <description>Fire an acidic glob at a target</description>
        <abilityClass>RT_Core.Ability_Base</abilityClass>
        <canUseAoeToGetTargets>true</canUseAoeToGetTargets>
        <cooldownTicksRange>1200~1600</cooldownTicksRange>
        <displayGizmoWhileUndrafted>true</displayGizmoWhileUndrafted>
        <disableGizmoWhileUndrafted>false</disableGizmoWhileUndrafted>
        <iconPath>AnimalProjectile/Acidbolt</iconPath>
        <verbProperties>
          <verbClass>RT_Core.Verb_CastAbility_Base</verbClass>
          <range>28</range>
          <minRange>1</minRange>
			    <defaultProjectile>RT_ZetaAcid</defaultProjectile>
			    <commonality>2</commonality>
        </verbProperties>
        <comps>
          <li Class="RT_Core.AbilityCompProperties_AbilityControl">
            <compClass>RT_Core.AbilityComp_AbilityControl</compClass>
            <autoUse>true</autoUse>
            <gizmoOnText>Acid Spit Enabled</gizmoOnText>
            <gizmoOffText>Acid Spit Disabled</gizmoOffText>
            <gizmoOnIconPath>AnimalProjectile/Acidbolt</gizmoOnIconPath>
            <gizmoOffIconPath>AnimalProjectile/Acidbolt</gizmoOffIconPath>
            <gizmoDesc>Toggle Acid Spit Usage</gizmoDesc>
          </li>
          <li Class="RT_Core.AbilityCompProperties_CastVerb">
            <compClass>RT_Core.AbilityComp_CastVerb</compClass>
            <verbProperties>
              <li>
                <verbClass>Verb_Shoot</verbClass>
                <accuracyTouch>0.95</accuracyTouch>
                <accuracyShort>0.60</accuracyShort>
                <accuracyMedium>0.50</accuracyMedium>
                <accuracyLong>0.30</accuracyLong>
                <hasStandardCommand>true</hasStandardCommand>
                <defaultProjectile>RT_ZetaAcid</defaultProjectile>
                <warmupTime>0.7</warmupTime>
                <range>28</range>
                <minRange>1</minRange>
                <burstShotCount>5</burstShotCount>
                <ticksBetweenBurstShots>16</ticksBetweenBurstShots>
                <soundCast>RT_AcidboltSound</soundCast>
                <muzzleFlashScale>1</muzzleFlashScale>
              </li>
            </verbProperties>
          </li>
			      <li Class="RT_Core.AbilityCompProperties_Cooldown">
              <compClass>RT_Core.AbilityComp_Cooldown</compClass>
				      <cooldownPool>ZetaAbilityPool</cooldownPool>
              <cooldownTicksRange>300</cooldownTicksRange>
				      <independent>false</independent>
				      <resetsTimer>false</resetsTimer>
			      </li>
        </comps>
      </AbilityDef>

      <!--Zetas have a fire breath, which needs to be added.
      Electrically-charged bouncing acid also exists, but unsure how to approach this. Fires 5
      Zeta fires 6 acid and 6 fireballs when on ceiling, so burst may change
      Apparently mutated ones have high defense and damage, but no new abilities-->

<!--=============== Omega Abilities ===============-->

      <AbilityDef>
        <defName>RT_OmegaBeam</defName>
        <label>Omega Fire Beam</label>
        <description>Create a beam of fire that ignites the ground below it.</description>
        <abilityClass>RT_Core.Ability_Base</abilityClass>
        <canUseAoeToGetTargets>true</canUseAoeToGetTargets>
        <cooldownTicksRange>1600~1200</cooldownTicksRange>
        <displayGizmoWhileUndrafted>true</displayGizmoWhileUndrafted>
        <disableGizmoWhileUndrafted>false</disableGizmoWhileUndrafted>
        <iconPath>AnimalProjectile/Firebeam1</iconPath>
        <verbProperties>
          <verbClass>RT_Core.Verb_CastAbility_Base</verbClass>
          <range>30</range>
          <minRange>3</minRange>
			    <defaultProjectile>RT_OmegaBeam</defaultProjectile>
			    <commonality>2</commonality>
        </verbProperties>
        <comps>
          <li Class="RT_Core.AbilityCompProperties_AbilityControl">
            <compClass>RT_Core.AbilityComp_AbilityControl</compClass>
            <autoUse>true</autoUse>
            <gizmoOnText>Firebeam Enabled</gizmoOnText>
            <gizmoOffText>Firebeam Disabled</gizmoOffText>
            <gizmoOnIconPath>AnimalProjectile/Firebeam1</gizmoOnIconPath>
            <gizmoOffIconPath>AnimalProjectile/Firebeam1</gizmoOffIconPath>
            <gizmoDesc>Toggle Firebeam Usage</gizmoDesc>
          </li>
          <li Class="RT_Core.AbilityCompProperties_CastVerb">
            <compClass>RT_Core.AbilityComp_CastVerb</compClass>
            <verbProperties>
              <li>
                <verbClass>Verb_Shoot</verbClass>
                <accuracyTouch>0.95</accuracyTouch>
                <accuracyShort>0.60</accuracyShort>
                <accuracyMedium>0.50</accuracyMedium>
                <accuracyLong>0.30</accuracyLong>
                <hasStandardCommand>true</hasStandardCommand>
                <defaultProjectile>RT_OmegaBeam</defaultProjectile>
                <warmupTime>2.5</warmupTime>
                <range>35</range>
                <minRange>3</minRange>
                <burstShotCount>1</burstShotCount>
                <ticksBetweenBurstShots>2</ticksBetweenBurstShots>
                <soundCast>RT_FireBeamSound</soundCast>
                <muzzleFlashScale>1</muzzleFlashScale>
              </li>
            </verbProperties>
          </li>
			      <li Class="RT_Core.AbilityCompProperties_Cooldown">
              <compClass>RT_Core.AbilityComp_Cooldown</compClass>
				      <cooldownPool>OmegaAbilityPool</cooldownPool>
				      <independent>false</independent>
				      <resetsTimer>true</resetsTimer>
			      </li>
        </comps>
      </AbilityDef>

      <!--Omegas can leap forward, do a breath sweep, and hit the ground with tail
      Omega will have fireballs as well, from Metroid II.
      Leap will likely be a medium range, massive damage, and a stun
      Breath sweep is similar to beam, except it fires from left to right in a cone shape
      Ability with tail will stun and damage anything around in one move
      Evolved one has increased damage and defense-->

 <!--=============== Queen Abilities ===============-->
 
  <!--Swap beam with a regular fire breath; beam is used elsewhere-->
      <AbilityDef>
        <defName>RT_QueenBeam</defName>
        <label>Queen Fire Beam</label>
        <description>Unleash a devastating beam of fire on a target</description>
        <abilityClass>RT_Core.Ability_Base</abilityClass>
        <canUseAoeToGetTargets>true</canUseAoeToGetTargets>
        <cooldownTicksRange>1600~2000</cooldownTicksRange>
        <displayGizmoWhileUndrafted>true</displayGizmoWhileUndrafted>
        <disableGizmoWhileUndrafted>false</disableGizmoWhileUndrafted>
        <iconPath>AnimalProjectile/Firebeam1</iconPath>
        <verbProperties>
          <verbClass>RT_Core.Verb_CastAbility_Base</verbClass>
          <range>45</range>
          <minRange>3</minRange>
			    <defaultProjectile>RT_QueenBeam</defaultProjectile>
			    <commonality>2</commonality>
        </verbProperties>
        <comps>
          <li Class="RT_Core.AbilityCompProperties_AbilityControl">
            <compClass>RT_Core.AbilityComp_AbilityControl</compClass>
            <autoUse>true</autoUse>
            <gizmoOnText>Firebeam Enabled</gizmoOnText>
            <gizmoOffText>Firebeam Disabled</gizmoOffText>
            <gizmoOnIconPath>AnimalProjectile/Firebeam1</gizmoOnIconPath>
            <gizmoOffIconPath>AnimalProjectile/Firebeam1</gizmoOffIconPath>
            <gizmoDesc>Toggle Firebeam Usage</gizmoDesc>
          </li>
          <li Class="RT_Core.AbilityCompProperties_CastVerb">
            <compClass>RT_Core.AbilityComp_CastVerb</compClass>
            <verbProperties>
              <li>
                <verbClass>Verb_Shoot</verbClass>
                <accuracyTouch>0.95</accuracyTouch>
                <accuracyShort>0.60</accuracyShort>
                <accuracyMedium>0.50</accuracyMedium>
                <accuracyLong>0.30</accuracyLong>
                <hasStandardCommand>true</hasStandardCommand>
                <defaultProjectile>RT_QueenBeam</defaultProjectile>
                <warmupTime>2.5</warmupTime>
                <range>50</range>
                <minRange>3</minRange>
                <burstShotCount>1</burstShotCount>
                <ticksBetweenBurstShots>2</ticksBetweenBurstShots>
                <soundCast>RT_FireBeamSound</soundCast>
                <muzzleFlashScale>1</muzzleFlashScale>
              </li>
            </verbProperties>
          </li>
			      <li Class="RT_Core.AbilityCompProperties_Cooldown">
              <compClass>RT_Core.AbilityComp_Cooldown</compClass>
				      <cooldownPool>QueenAbilityPool</cooldownPool>
				      <independent>false</independent>
				      <resetsTimer>true</resetsTimer>
			      </li>
        </comps>
      </AbilityDef>

      <!-- Abilities from Other M are also present here
      Queen can charge targets, which will be incredibly lethal
      Queen has a regular fire breath
      Queen has a sweeping fire beam breath, similar to Omega.
      Queen can also 'blow' hostiles away, knocking them back and stunning in the process
      Queen can spawn larvae; unsure if this should be an ability or not.
      If queen does spawn larvae as an ability, it will need to be heavily altered when
      player controls one-->
</Defs>
